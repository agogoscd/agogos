---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: builders.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Builder
    listKind: BuilderList
    plural: builders
    singular: builder
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Builder is the Schema for the builders API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Builder
              properties:
                taskRef:
                  type: object
                  description: Defines the task reference
                  properties:
                    resolver:
                      type: string
                      description: Resolver used for Tekton Task
                    name:
                      type: string
                      description: Name of the Tekton task
                    params:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                  oneOf:
                    - required: ["resolver", "params"]
                    - required: ["name"]
                schema:
                  type: object
                  description: Validation definition that should be applied on the Builder configuration passed.
                  properties:
                    openAPIV3Schema:
                      x-kubernetes-preserve-unknown-fields: true
                      type: object
                      description: "OpenAPI v3 formatted validation.
                        More info: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md"
                  required:
                    - "openAPIV3Schema"
                workspaces:
                  type: array
                  description: "List of workspace mappings between Agogos exposed workspaces and Task being the implementation of Builder"
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: "Name of the target pipeline in the Task implementation"
                      subPath:
                        type: string
                        description: "Subpath on the source workspace that should be exposed as the target workspace"
                    required:
                      - "name"
              required:
                - "taskRef"
            status:
              description: Status defines the observed state of Builder
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Initializing
                    - Ready
                    - Failed
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: builds.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Build
    listKind: BuildList
    plural: builds
    singular: build
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Build is the Schema for the builds API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Build
              properties:
                component:
                  description: "The Component name the Build refers to"
                  type: string
              required:
                - "component"
            status:
              description: Status defines the observed state of Build
              properties:
                componentSpec:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                output:
                  type: string
                startTime:
                  format: date-time
                  type: string
                completionTime:
                  format: date-time
                  type: string
                lastUpdate:
                  format: date-time
                  type: string
                result:
                  description: "Build result metadata"
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Running
                    - Finished
                    - Failed
                    - Aborted
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Component
          jsonPath: .spec.component
          type: string
        - name: Status
          jsonPath: .status.status
          type: string
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: components.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Component
    listKind: ComponentList
    plural: components
    singular: component
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Component is the Schema for the components API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: ComponentSpec defines the desired state of Component
              properties:
                pre:
                  type: array
                  description: "List of Stages that should be executed before the build"
                  items:
                    type: object
                    properties:
                      stageRef:
                        type: object
                        description: Stage reference
                        properties:                         
                          name:
                            type: string
                            description: Name of the stage to run
                          namespace:
                            type: string
                            description: Namespace of where the Agogos stage can be found, defaults to the Agogos operator namespace.
                        required:
                          - name
                      runAfter:
                        type: array
                        items:
                          type: string
                        description: A list of stages that must finish BEFORE this stage runs
                      config:
                        type: object
                        description: "Additional configuration properties passed to the stage implementation"
                        x-kubernetes-preserve-unknown-fields: true
                    required: ["stageRef"]

                post:
                  type: array
                  description: "List of Stages that should be executed after the build"
                  items:
                    type: object
                    properties:
                      stageRef:
                        type: object
                        description: Stage reference
                        properties:                         
                          name:
                            type: string
                            description: Name of the stage to run
                          namespace:
                            type: string
                            description: Namespace of where the Agogos stage can be found, defaults to the Agogos operator namespace.
                        required:
                          - name
                      config:
                        type: object
                        description: "Additional configuration properties passed to the stage implementation"
                        x-kubernetes-preserve-unknown-fields: true
                    required: ["stageRef"]

                build:
                  type: object
                  properties:
                    builderRef:
                      type: object
                      description: Builder reference
                      properties:
                        name:
                          type: string
                          description: Name of the Builder
                        namespace:
                          type: string
                          description: Namespace of the Builder, default is the operator namespace
                      required: ["name"]
                    params:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  required: ["builderRef"]
                dependents:
                  type: object
                  description: Dependents of this Component
                  properties:
                    components:
                      type: array
                      description: List of the Components
                      items:
                        type: string
                        description: Name of the Component
                    groups:
                      type: array
                      description: List of the Groups
                      items:
                        type: string
                        description: Name of the Group
                    pipelines:
                      type: array
                      description: List of the Pipelines
                      items:
                        type: string
                        description: Name of the Pipeline
                  anyOf:
                    - required: ["components"]
                    - required: ["groups"]
                    - required: ["pipelines"]
              required:
                - "build"
            status:
              description: ComponentStatus defines the observed state of Component
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Initializing
                    - Ready
                    - Failed
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Status
          jsonPath: .status.status
          type: string
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dependencies.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Dependency
    listKind: DependencyList
    plural: dependencies
    singular: dependency
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Dependency is used to handle dependencies between objects.
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              type: object
              properties:
                name:
                  type: string
                resource:
                  enum:
                    - Component
                    - Group
                    - Pipeline
                  type: string
                instance:
                  type: string
                group:
                  type: string
              required:
                - "name"
                - "resource"
                - "instance"
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: executions.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Execution
    listKind: ExecutionList
    plural: executions
    singular: execution
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Execution is the Schema for the executions API
          properties:
            apiVersion:
              type: string
            kind:
              description:
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Execution
              properties:
                group:
                  type: string
                components:
                  type: object
                  additionalProperties: 
                    type: object
                    properties:
                      name: 
                        type: string
                      status:
                        description: Status defines the observed state of Build
                        properties:
                          startTime:
                            format: date-time
                            type: string
                          completionTime:
                            format: date-time
                            type: string
                          reason:
                            type: string
                          lastUpdate:
                            format: date-time
                            type: string
                          status:
                            default: New
                            enum:
                              - New
                              - Running
                              - Finished
                              - Failed
                              - Aborted
                            type: string
                        type: object
                groups:
                  type: object
                  additionalProperties: 
                    type: object
                    properties:
                      name: 
                        type: string
                      status:
                        description: Status defines the observed state of Build
                        properties:
                          startTime:
                            format: date-time
                            type: string
                          completionTime:
                            format: date-time
                            type: string
                          lastUpdate:
                            format: date-time
                            type: string
                          status:
                            default: New
                            enum:
                              - New
                              - Running
                              - Finished
                              - Failed
                              - Aborted
                            type: string
                        type: object
                pipelines:
                  type: object
                  additionalProperties: 
                    type: object
                    properties:
                      name: 
                        type: string
                      status:
                        description: Status defines the observed state of Build
                        properties:
                          startTime:
                            format: date-time
                            type: string
                          completionTime:
                            format: date-time
                            type: string
                          lastUpdate:
                            format: date-time
                            type: string
                          status:
                            default: New
                            enum:
                              - New
                              - Running
                              - Finished
                              - Failed
                              - Aborted
                            type: string
                        type: object
              anyOf:
                - required: ["components"]
                - required: ["groups"]
                - required: ["pipelines"]
            status:
              description: Status defines the observed state of Build
              properties:
                startTime:
                  format: date-time
                  type: string
                completionTime:
                  format: date-time
                  type: string
                lastUpdate:
                  format: date-time
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Running
                    - Finished
                    - Failed
                    - Aborted
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Status
          jsonPath: .status.status
          type: string
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: groups.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Group
    listKind: GroupList
    plural: groups
    singular: group
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Group is the Schema for the groups API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Group
              properties:
                components:
                  type: array
                  description: List of the Components
                  items:
                    type: string
                    description: Name of the Component
                pipelines:
                  type: array
                  description: List of the Pipelines
                  items:
                    type: string
                    description: Name of the Pipeline
                dependents:
                  type: object
                  description: Dependents of this group
                  properties:
                    components:
                      type: array
                      description: List of the Components
                      items:
                        type: string
                        description: Name of the Component
                    groups:
                      type: array
                      description: List of the Groups
                      items:
                        type: string
                        description: Name of the Group
                    pipelines:
                      type: array
                      description: List of the Pipelines
                      items:
                        type: string
                        description: Name of the Pipeline
                  anyOf:
                    - required: ["components"]
                    - required: ["groups"]
                    - required: ["pipelines"]
              anyOf:
                - required: ["components"]
                - required: ["pipelines"]
            status:
              description: Status defines the observed state of Group
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  default: New
                  enum:
                  - New
                  - Initializing
                  - Ready
                  - Failed
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Status
          jsonPath: .status.status
          type: string
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: pipelines.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Pipeline is the Schema for the pipeline API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of the Pipeline
              properties:
                stages:
                  type: array
                  description: List of stages to run in order
                  items:
                    type: object
                    description: Stage reference with required configuration
                    properties:
                      stageRef:
                        type: object
                        description: Stage reference
                        properties:                         
                          name:
                            type: string
                            description: Name of the stage to run
                          namespace:
                            type: string
                            description: Namespace of where the Agogos stage can be found, defaults to the Agogos operator namespace.
                        required:
                          - name
                      runAfter:
                        type: array
                        items:
                          type: string
                        description: A list of stages that must finish BEFORE this stage runs
                      config:
                        type: object
                        description: "Additional configuration properties passed to the stage implementation"
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                      - "stageRef"
                dependents:
                  type: object
                  description: Dependents of this Pipeline
                  properties:
                    components:
                      type: array
                      description: List of the Components
                      items:
                        type: string
                        description: Name of the Component
                    groups:
                      type: array
                      description: List of the Groups
                      items:
                        type: string
                        description: Name of the Group
                    pipelines:
                      type: array
                      description: List of the Pipelines
                      items:
                        type: string
                        description: Name of the Pipeline
                  anyOf:
                    - required: ["components"]
                    - required: ["groups"]
                    - required: ["pipelines"]
              required:
                - "stages"
            status:
              description: ComponentStatus defines the observed state of Component
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Initializing
                    - Ready
                    - Failed
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Status
          jsonPath: .status.status
          type: string
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: runs.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Run
    listKind: RunList
    plural: runs
    singular: run
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: PipelineRun is the Schema for the builds API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Build
              properties:
                pipeline:
                  description: "Name of the Pipeline to run"
                  type: string
              required:
                - "pipeline"
            status:
              description: PipelineRunStatus defines the observed state of PipelineRun
              properties:
                startTime:
                  format: date-time
                  type: string
                completionTime:
                  format: date-time
                  type: string
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Running
                    - Finished
                    - Failed
                    - Aborted
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Pipeline
          jsonPath: .spec.pipeline
          type: string
        - name: Status
          jsonPath: .status.status
          type: string
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: stages.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Stage
    listKind: StageList
    plural: stages
    singular: stage
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Stage is the Schema for the stages API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Stage
              properties:
                taskRef:
                  type: object
                  description: Defines the task reference
                  properties:
                    resolver:
                      type: string
                      description: Resolver used for Tekton Task
                    name:
                      type: string
                      description: Name of the Tekton task
                    params:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                  oneOf:
                    - required: ["resolver", "params"]
                    - required: ["name"]
                schema:
                  type: object
                  description: Validation definition that should be applied on the Stage configuration passed.
                  properties:
                    openAPIV3Schema:
                      x-kubernetes-preserve-unknown-fields: true
                      type: object
                      description: "OpenAPI v3 formatted validation.
                        More info: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md"
                  required:
                    - "openAPIV3Schema"
              required:
                - "taskRef"
            status:
              description: StageStatus defines the observed state of Stage
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Phase
          type: string
          jsonPath: .metadata.labels.cpaas\.redhat\.com/phase
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: submissions.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Submission
    listKind: SubmissionList
    plural: submissions
    singular: submission
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Submission is used to submit component builds, pipeline runs or groups executions of both
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              type: object
              properties:
                name:
                  type: string
                resource:
                  enum:
                    - Component
                    - Group
                    - Pipeline
                  type: string
                instance:
                  type: string
                group:
                  type: string
              required:
                - "name"
                - "resource"
                - "instance"
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: triggers.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Trigger
    listKind: TriggerList
    plural: triggers
    singular: trigger
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Trigger schema
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: State of Trigger
              properties:
                events:
                  type: array
                  description: List of events that fires the Trigger
                  items:
                    type: object
                    description: Event definition that fires the Triggers

                    properties:
                      cel:
                        type: object
                        properties:
                          filter:
                            type: string
                            description: "Event filter using the CEL language: https://tekton.dev/docs/triggers/cel_expressions/"
                        required: ["filter"]
                      component:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the Component which builds should be watched
                        required: ["name"]
                      group:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the ComponentGroup which builds should be watched
                        required: ["name"]
                      pipeline:
                        type: object
                        properties:
                          name:
                            type: string
                            description: "The name of the Pipeline which successful finish should be watched"
                        required: ["name"]
                      build:
                        type: object
                        properties:
                          filter:
                            type: string
                            description: "Event filter using the CEL language: https://tekton.dev/docs/triggers/cel_expressions/"
                        required: ["filter"]
                      timed:
                        type: object
                        properties:
                          cron:
                            type: string
                            description: "Event filter using the CEL language: https://tekton.dev/docs/triggers/cel_expressions/"
                            example: "0 15 2 * *"
                        required: ["cron"]
                    anyOf:
                      - required: ["component"]
                      - required: ["group"]
                      - required: ["cel"]
                      - required: ["pipeline"]
                      - required: ["build"]
                      - required: ["timed"]
                target:
                  type: object
                  description: "The target resource that should be created"
                  properties:
                    kind:
                      type: string
                      enum: ["Component", "Group", "Pipeline"]
                    name:
                      type: string
                    apiVersion:
                      type: string
                  required:
                    - kind
                    - name
              required:
                - events
                - target
            status:
              description: Defines the observed state of the Trigger
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Initializing
                    - Ready
                    - Failed
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
