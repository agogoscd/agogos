---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: builders.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Builder
    listKind: BuilderList
    plural: builders
    singular: builder
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Builder is the Schema for the builders API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Builder
              properties:
                taskRef:
                  type: object
                  description: Defines the task reference
                  properties:
                    name:
                      type: string
                      description: Name of the Tekton task being the implementation of the Stage.
                    kind: 
                      type: string
                      description: The kind. Can be either Task or ClusterTask
                schema:
                  type: object
                  description: Validation definition that should be applied on the Builder configuration passed.
                  properties:
                    openAPIV3Schema:
                      x-kubernetes-preserve-unknown-fields: true
                      type: object
                      description: "OpenAPI v3 formatted validation.
                        More info: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md"
                  required:
                    - "openAPIV3Schema"
              required:
                - "taskRef"
            status:
              description: BuilderStatus defines the observed state of Builder
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: builds.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Build
    listKind: BuildList
    plural: builds
    singular: build
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Build is the Schema for the builds API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Build
              properties:
                component:
                  description: "The Component name the Build refers to"
                  type: string
              required:
                - "component"
            status:
              description: Status defines the observed state of Build
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                result:
                  description: "Build result metadata"
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Running
                    - Finished
                    - Failed
                    - Aborted
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Component
          jsonPath: .spec.component
          type: string
        - name: Status
          jsonPath: .status.status
          type: string
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterstages.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: ClusterStage
    listKind: ClusterStageList
    plural: clusterstages
    singular: clusterstage
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Stage is the Schema for the stages API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Stage
              properties:
                taskRef:
                  type: object
                  description: Defines the task reference
                  properties:
                    name:
                      type: string
                      description: Name of the Tekton task being the implementation of the Stage.
                    kind: 
                      type: string
                      description: The kind. Can be either Task or ClusterTask
                schema:
                  type: object
                  description: Validation definition that should be applied on the Stage configuration defined.
                  properties:
                    openAPIV3Schema:
                      x-kubernetes-preserve-unknown-fields: true
                      type: object
                      description: "OpenAPI v3 formatted validation.
                        More info: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md"
                  required:
                    - "openAPIV3Schema"
              required:
                - "taskRef"
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: components.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Component
    listKind: ComponentList
    plural: components
    singular: component
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Component is the Schema for the components API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: ComponentSpec defines the desired state of Component
              properties:
                data:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                  description:
                    "Additional data containing the information about the Component.
                    It can be metadata as well as source coordinates.
                    This content needs to be supported by the particular builder
                    used to build this component. Builder defines schema that this
                    content is checked against."
                builderRef:
                  type: object
                  description: Defines the builder reference
                  properties:
                    name:
                      type: string
                      description: Name of the builder being referenced.
                    kind:
                      type: string
                      description: The kind. Can be either builder or ClusterBuilder
              required:
                - "data"
                - "builderRef"
            status:
              description: ComponentStatus defines the observed state of Component
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Initializing
                    - Ready
                    - Failed
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Status
          jsonPath: .status.status
          type: string
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: groups.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Group
    listKind: GroupList
    plural: groups
    singular: group
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Group is the Schema for the groups API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Group
              properties:
                components:
                  type: array
                  description: List of the Components
                  items:
                    type: string
                    description: Name of the Component
              required:
                - "components"
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: pipelines.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Pipeline is the Schema for the pipeline API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of the Pipeline
              properties:
                group:
                  type: string
                  description: Name of the Group the Pipeline should run with
                stages:
                  type: array
                  description: List of stages to run in order
                  items:
                    type: object
                    description: Stage reference with required configuration
                    properties:
                      stageRef:
                        type: object
                        description: Stage reference
                        properties:                         
                          name:
                            type: string
                            description: Name of the stage to run
                          kind:
                            type: string
                            description: "The type of the stage, one of: Stage or ClusterStage"
                            enum: ["Stage", "ClusterStage"]
                        required:
                          - name
                          - kind
                      runAfter:
                        type: array
                        items:
                          type: string
                        description: A list of stages that must finish BEFORE this stage runs
                      config:
                        type: object
                        description: "Additional configuration properties passed to the stage implementation"
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                      - "stageRef"
              required:
                - "stages"
            status:
              description: ComponentStatus defines the observed state of Component
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Initializing
                    - Ready
                    - Failed
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Component Group
          jsonPath: .spec.group
          type: string
        ## https://github.com/kubernetes/kubectl/issues/517
        # - name: Stages
        #   type: string
        #   jsonPath: .spec.stages[*].name
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: runs.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Run
    listKind: RunList
    plural: runs
    singular: run
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: PipelineRun is the Schema for the builds API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Build
              properties:
                pipeline:
                  description: "Name of the Pipeline to run"
                  type: string
              required:
                - "pipeline"
            status:
              description: PipelineRunStatus defines the observed state of PipelineRun
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  default: New
                  enum:
                    - New
                    - Running
                    - Finished
                    - Failed
                    - Aborted
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Pipeline
          jsonPath: .spec.pipeline
          type: string
        - name: Status
          jsonPath: .status.status
          type: string
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: stages.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Stage
    listKind: StageList
    plural: stages
    singular: stage
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Stage is the Schema for the stages API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: Defines the desired state of Stage
              properties:
                taskRef:
                  type: object
                  description: Defines the task reference
                  properties:
                    name:
                      type: string
                      description: Name of the Tekton task being the implementation of the Stage.
                    kind: 
                      type: string
                      description: The kind. Can be either Task or ClusterTask
                schema:
                  type: object
                  description: Validation definition that should be applied on the Stage configuration passed.
                  properties:
                    openAPIV3Schema:
                      x-kubernetes-preserve-unknown-fields: true
                      type: object
                      description: "OpenAPI v3 formatted validation.
                        More info: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md"
                  required:
                    - "openAPIV3Schema"
              required:
                - "taskRef"
            status:
              description: StageStatus defines the observed state of Stage
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Phase
          type: string
          jsonPath: .metadata.labels.cpaas\.redhat\.com/phase
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: triggers.agogos.redhat.com
spec:
  group: agogos.redhat.com
  names:
    kind: Trigger
    listKind: TriggerList
    plural: triggers
    singular: trigger
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Trigger schema
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              type: object
              description: State of Trigger
              properties:
                events:
                  type: array
                  description: List of events that fires the Trigger
                  items:
                    type: object
                    description: Event definition that fires the Triggers

                    properties:
                      cel:
                        type: object
                        properties:
                          filter:
                            type: string
                            description: "Event filter using the CEL language: https://tekton.dev/docs/triggers/cel_expressions/"
                        required: ["filter"]
                      component:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the Component which builds should be watched
                        required: ["name"]
                      group:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the ComponentGroup which builds should be watched
                        required: ["name"]
                      pipeline:
                        type: object
                        properties:
                          name:
                            type: string
                            description: "The name of the Pipeline which successful finish should be watched"
                        required: ["name"]
                      build:
                        type: object
                        properties:
                          filter:
                            type: string
                            description: "Event filter using the CEL language: https://tekton.dev/docs/triggers/cel_expressions/"
                        required: ["filter"]
                      timed:
                        type: object
                        properties:
                          cron:
                            type: string
                            description: "Event filter using the CEL language: https://tekton.dev/docs/triggers/cel_expressions/"
                            example: "0 15 2 * *"
                        required: ["cron"]
                    oneOf:
                      - required: ["component"]
                      - required: ["group"]
                      - required: ["cel"]
                      - required: ["pipeline"]
                      - required: ["build"]
                      - required: ["timed"]
                target:
                  type: object
                  description: "The target resource that should be created"
                  properties:
                    kind:
                      type: string
                      enum: ["Component", "Pipeline"]
                    name:
                      type: string
                    apiVersion:
                      type: string
                  required:
                    - kind
                    - name
              required:
                - events
                - target
            status:
              description: Trigger status
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Namespace
metadata:
  name: agogos
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: agogos-el
rules:
  # EventListeners need to be able to fetch any clustertriggerbindings
  - apiGroups: ["triggers.tekton.dev"]
    resources: ["clustertriggerbindings"]
    verbs: ["get", "list", "watch"]
  # EventListeners need to be able to fetch all namespaced resources
  - apiGroups: ["triggers.tekton.dev"]
    resources:
      ["eventlisteners", "triggerbindings", "triggertemplates", "triggers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
    # Permissions to create resources in associated TriggerTemplates
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["impersonate"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agogos-el
subjects:
  - kind: ServiceAccount
    name: agogos-el
    namespace: default # TODO: change this
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agogos-el
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agogos-el
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
---
apiVersion: eventing.knative.dev/v1
kind: Broker
metadata:
  name: default
  namespace: agogos
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: default
  namespace: agogos
spec:
  broker: default
  subscriber:
    uri: http://el-default.default.svc.cluster.local:8080
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: default
  namespace: default
spec:
  serviceAccountName: agogos-el
  namespaceSelector:
    matchNames:
      - default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agogos-operator
  namespace: agogos
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agogos-operator-view
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: view
subjects:
  - kind: ServiceAccount
    name: agogos-operator
    namespace: agogos
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: agogos-operator-admin
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  - apiGroups: ["agogos.redhat.com"]
    resources: ["*"]
    verbs:
      [
        "get",
        "list",
        "watch",
        "create",
        "update",
        "patch",
        "delete",
        "deletecollection",
      ]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["*"]
    verbs:
      [
        "get",
        "list",
        "watch",
        "create",
        "update",
        "patch",
        "delete",
        "deletecollection",
      ]
  - apiGroups: ["triggers.tekton.dev"]
    resources: ["*"]
    verbs:
      [
        "get",
        "list",
        "watch",
        "create",
        "update",
        "patch",
        "delete",
        "deletecollection",
      ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agogos-operator-admin
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: agogos-operator-admin
subjects:
  - kind: ServiceAccount
    name: agogos-operator
    namespace: agogos
---
apiVersion: v1
kind: Service
metadata:
  name: agogos-operator
  namespace: agogos
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
spec:
  ports:
    - name: http
      port: 7070
      targetPort: 7070
  type: ClusterIP
  selector:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agogos-operator
  namespace: agogos
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: agogos
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/instance: default
        app.kubernetes.io/part-of: agogos
    spec:
      containers:
        - name: operator
          image: quay.io/cpaas/agogos-poc-operator:devel
          imagePullPolicy: Always
          ports:
            - containerPort: 7070
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 7070
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1024Mi"
              cpu: "1000m"
      serviceAccount: agogos-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agogos-webhooks
  namespace: agogos
  labels:
    app.kubernetes.io/component: webhooks
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agogos-webhooks-view
  labels:
    app.kubernetes.io/component: webhooks
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: view
subjects:
  - kind: ServiceAccount
    name: agogos-webhooks
    namespace: agogos
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: agogos-webhooks-admin
  labels:
    app.kubernetes.io/component: webhooks
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  - apiGroups: ["agogos.redhat.com"]
    resources: ["*"]
    verbs:
      [
        "get",
        "list",
        "watch",
        "create",
        "update",
        "patch",
        "delete",
        "deletecollection",
      ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agogos-webhooks-admin
  labels:
    app.kubernetes.io/component: webhooks
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: agogos-webhooks-admin
subjects:
  - kind: ServiceAccount
    name: agogos-webhooks
    namespace: agogos
---
apiVersion: v1
kind: Service
metadata:
  name: agogos-webhooks
  namespace: agogos
  labels:
    app.kubernetes.io/component: webhooks
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
spec:
  ports:
    - name: http
      port: 80
      targetPort: 7080
    - port: 443
      protocol: TCP
      name: https
      targetPort: 8443
  type: ClusterIP
  selector:
    app.kubernetes.io/component: webhooks
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agogos-webhooks
  namespace: agogos
  labels:
    app.kubernetes.io/component: webhooks
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: agogos
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhooks
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: agogos
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webhooks
        app.kubernetes.io/instance: default
        app.kubernetes.io/part-of: agogos
    spec:
      containers:
        - name: webhooks
          image: quay.io/cpaas/agogos-poc-webhooks:devel
          imagePullPolicy: Always
          env:
            - name: QUARKUS_HTTP_SSL_CERTIFICATE_FILE
              value: /certs/tls.crt
            - name: QUARKUS_HTTP_SSL_CERTIFICATE_KEY_FILE
              value: /certs/tls.key
          volumeMounts:
            - name: certs
              mountPath: "/certs"
              readOnly: true
          ports:
            - containerPort: 7080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 7080
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            requests:
              memory: "256Mi"
              cpu: "400m"
            limits:
              memory: "512Mi"
              cpu: "800m"
      volumes:
        - name: certs
          secret:
            secretName: webhooks-cert
      serviceAccount: agogos-webhooks
