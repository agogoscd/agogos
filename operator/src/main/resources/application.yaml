quarkus:
  banner:
    enabled: true
    path: "banner.txt"
  container-image:
    group: "agogos"
    name: "agogos-operator"
    registry: "quay.io"
    tag: "latest"
  docker:
    dockerfile-jvm-path: "src/main/docker/Dockerfile.fast-jar"
  http:
    port: 7070
  kubernetes:
    namespace: "agogos"
    service-account: "agogos-operator"
  log:
    min-level: "TRACE"
    syslog:
      truncate: false
  operator-sdk:
    crd:
      generate: false
      apply: false
    fail-on-version-check: false
  quartz:
    start-mode: "FORCED"

agogos:
  service-account: agogos
  cloud-events:
    publish: true
    base-url: "http://broker-ingress.knative-eventing.svc.cluster.local"

  security:
    # Here we are controlling the Pod security Policy for all containers
    # run as part of Build or Pipeline in Agogos.
    # https://kubernetes.io/docs/concepts/policy/pod-security-policy
    pod-security-policy:
      # By default every we require that every container run in the Pod
      # has a regular user specified.
      # https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups
      runAsNonRoot: true
      # To unify permissions of files created as part of Builds and Pipeline execution
      # we set the used ID.
      # https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups
      runAsUser: 65532

kubernetes:
  # Default storage class name in minikube
  storage-class: "standard"

"%dev":
  broker/mp-rest/url: http://localhost:8111

  #hostnameVerifier: io.quarkus.restclient.NoopHostnameVerifier

  agogos:
    service-account: agogos
    cloud-events:
      publish: true
      base-url: "http://localhost:8111"

  quarkus:
    log:
      category:
        "com.redhat.agogos":
          level: TRACE
        "io.fabric8.kubernetes.client.informers.cache":
          level: WARN
        # "io.javaoperatorsdk":
        #   level: TRACE
    kubernetes-client:
      trust-certs: true

"%prod":
  broker/mp-rest/url: "http://broker-ingress.knative-eventing.svc.cluster.local"

  quarkus:
    # http:
    #   ssl:
    #     certificate:
    #       file: /server.crt
    #       key-file: /server.key
    log:
      category:
        "com.redhat.agogos":
          level: DEBUG

    # TODO: change this
    kubernetes-client:
      trust-certs: true

"%test":
  broker/mp-rest/url: http://localhost:8111
